#!/usr/bin/env python
# (c) Olivier Verdier <olivier.verdier@gmail.com>, 2007-2008
"""
A wrapper around pdflatex to allow:
- hiding of the temporary files in various ways
- running pdflatex blazingly fast using the -batchmode option
	and returning feedback by parsing the log file.
"""

from pydflatex import Typesetter

# name of the directory containing the auxiliary files
tmp_dir_name = Typesetter.tmp_dir_name

# whether to stop as soon as an error is detected
halt_on_error = Typesetter.halt_on_errors


######################################################################


#setting up the command options
from optparse import OptionParser
usage = 'usage: %prog [options] texfile1 [texfile2]...'
description = '''Compile tex files with pdflatex and store the auxiliary files in a subfolder.
Note that the '.tex' extension may be omitted'''
parser = OptionParser(usage=usage, description=description)

## def add_option(*args, **kwargs):
## 	parser.add_option(*args,**kwargs, default=Typesetter.__getattribute__(kwargs['dest']))

parser.add_option('-v', '--view', dest='open', help='view the pdf file(s) in an editor.', default=False, action='store_true')

parser.add_option('-k', '--continue', help='continue on error', dest='halt_on_errors', action='store_false', default=halt_on_error)

parser.add_option('-t', '--tmp-folder', help='hidden folder for auxiliary files', dest='tmp_dir_name', action='store', default=tmp_dir_name)

#parser.add_option('-r', '--rename', help='rename the output pdf file', dest='name', action='store', default=None)

parser.add_option('-c', '--clean-up', help='clean up auxiliary files', dest='clean_up', action='store_true', default=False)

parser.add_option('-x', '--extra-run', help='run pdflatex one extra time', dest='extra_run', action='store_true', default=False)


(options,args) = parser.parse_args()



typesetter = Typesetter(**options.__dict__)
try:
	typesetter.run(args)
except Exception, e:
	import sys
	sys.exit(1)

